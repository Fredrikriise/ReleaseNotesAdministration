@model ReleaseNotesAdministration.ViewModels.ReleaseNoteAdminViewModel

@{
    ViewData["Title"] = "Edit Release note";
}
<head>
    <script>
        //Client validation
        $(document).ready(function () {
            var lastUpdatedBy = document.getElementById('LastUpdatedBy').value;

            if (lastUpdatedBy == 0) {
                document.getElementById('LastUpdatedBy').style.borderColor = "orange";

                $("#LastUpdatedBy").on('keyup', function () {
                    document.getElementById('LastUpdatedBy').style.borderColor = "rgb(206, 212, 218)";
                });
            }

            $(".submitButton").click(function (evt) {
                var lastUpdatedBy = document.getElementById('LastUpdatedBy').value;
                var title = document.getElementById('Title').value;
                var bodyText = CKEDITOR.instances['BodyText'].getData();
                var productId = document.getElementById('ProductId').value;
                var createdBy = document.getElementById('CreatedBy').value;
                var productId = document.getElementById('ProductId').value;
                var pickedWorkItems = document.querySelector('input[name="PickedWorkItems"]:checked');

                if (!pickedWorkItems || lastUpdatedBy.length == 0 || title.length == 0 || bodyText.length == 0 || productId.length == 0 || createdBy.length == 0) {
                    window.toastr.error("An error occured when trying to update a release note");
                }

                if (!pickedWorkItems) {
                    evt.preventDefault();
                    document.getElementById('PickedWorkItemsValidation').innerHTML = "*Related work items are required to update a release note!";
                    document.getElementById('PickedWorkItemsValidation').style.color = "red";

                    $(".PickedWorkItems").on('change', function () {
                        var ok = "";
                        $("#PickedWorkItemsValidation").html(ok);
                    });
                }

                if (lastUpdatedBy.length == 0) {
                    evt.preventDefault();
                    document.getElementById('LastUpdatedByValidation').innerHTML = "*Last updated by is required to update a release note!";
                    document.getElementById('LastUpdatedByValidation').style.color = "red";

                    $("#LastUpdatedBy").on('keyup', function () {
                        var ok = "";
                        $("#LastUpdatedByValidation").html(ok);
                    });
                }

                if (title.length == 0) {
                    evt.preventDefault();
                    document.getElementById('TitleValidation').innerHTML = "*Title is required to update a release note!";
                    document.getElementById('TitleValidation').style.color = "red";

                    $("#Title").on('keyup', function () {
                        var ok = "";
                        $("#TitleValidation").html(ok);
                    });
                }

                if (bodyText.length == 0) {
                    evt.preventDefault();
                    document.getElementById('BodyTextValidation').innerHTML = "*Body text is required to update a release note!";
                    document.getElementById('BodyTextValidation').style.color = "red";

                    CKEDITOR.instances['BodyText'].on('change', function () {
                        var ok = "";
                        $("#BodyTextValidation").html(ok);
                    });
                }

                if (productId.length == 0) {
                    evt.preventDefault();
                    document.getElementById('ProductIdValidation').innerHTML = "*Product is required to update a release note!";
                    document.getElementById('ProductIdValidation').style.color = "red";

                    $("#ProductId").on('change', function () {
                        var ok = "";
                        $("#ProductIdValidation").html(ok);
                    });
                }

                if (createdBy.length == 0) {
                    evt.preventDefault();
                    document.getElementById('CreatedByValidation').innerHTML = "*Last updated by is required to update a release note!";
                    document.getElementById('CreatedByValidation').style.color = "red";

                    $("#CreatedBy").on('keyup', function () {
                        var ok = "";
                        $("#CreatedByValidation").html(ok);
                    });
                }
            });
        });

        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });

        $(document).ready(function () {
            $("#myInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#myList li").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });
        });

    </script>
</head>

<div class="text-center">
    <h1 class="display-4">Talentech - Release Notes Administration</h1>
    <hr class="mb-3 mt-1" />
</div>

<div>
    <h2>Edit Release Note</h2>
    <div class="mb-4">
        <a href='javascript:history.go(-1)'><span class="fa fa-arrow-left"></span> Back to release notes</a>
    </div>

    <div class="row">
        <div class="col-md-6">
            <form asp-action="EditReleaseNote">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label for="Title" class="control-label">Title</label>
                    <input asp-for="Title" class="form-control" id="Title" />
                    <span id="TitleValidation"></span>
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group" style="padding-left: 2px;">
                    <label for="BodyText" class="control-label">Body text</label>
                    <textarea class="form-control" asp-for="BodyText" runat="server" id="BodyText"></textarea>
                    <script>
                        CKEDITOR.config.extraPlugins = 'base64image';
                        //Congif to remove paragraph tags
                        CKEDITOR.config.autoParagraph = false;
                        // Replace the <textarea id="ckeditor"> with a CKEditor
                        CKEDITOR.replace('BodyText');
                        config.extraPlugins = 'simpleuploads,imagesfromword';
                        config.coreStyles_bold = { element: 'b', overrides: 'strong' };
                    </script>
                    <span id="BodyTextValidation"></span>
                    <span asp-validation-for="BodyText" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="ProductId" class="control-label">Product</label>
                    <select asp-for="ProductId"
                            asp-items="@(new SelectList(ViewBag.products,"ProductId","ProductName"))" class="form-control" id="ProductId">
                    </select>
                    <span id="ProductIdValidation"></span>
                    <span asp-validation-for="ProductId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input asp-for="CreatedBy" type="hidden" class="form-control" id="CreatedBy" />
                    <span id="CreatedByValidation"></span>
                    <span asp-validation-for="CreatedBy" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input asp-for="CreatedDate" type="hidden" class="form-control" />
                    <span asp-validation-for="CreatedDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="LastUpdatedBy" class="control-label">Last updated by</label>
                    <input asp-for="LastUpdatedBy" class="form-control" id="LastUpdatedBy" />
                    <span id="LastUpdatedByValidation"></span>
                    <span asp-validation-for="LastUpdatedBy" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input asp-for="LastUpdateDate" type="hidden" class="form-control" />
                    <span asp-validation-for="LastUpdateDate" class="text-danger"></span>
                </div>

                @{
                    string[] PickedWorkItemId = new string[] { };

                    if (ViewBag.selectedWorkItems != null)
                    {
                        PickedWorkItemId = ViewBag.selectedWorkItems.Split(' ');

                        for (int i = 0; i < PickedWorkItemId.Length; i++)
                        {
                            if (PickedWorkItemId[i].Length <= 1)
                            {
                                PickedWorkItemId = PickedWorkItemId.Take(PickedWorkItemId.Count() - 1).ToArray();
                            }
                        }
                    }
                }

                <div class="input-group mb-2">
                    <label for="myInput" class="mb-1">Which work items are related to the release note you would like to publish?</label>
                    <input type="text" class="form-control" id="myInput" placeholder="Search">
                    <div class="input-group-append">
                        <button class="input-group-text" aria-label="Search button"><span class="fas fa-search"></span></button>
                    </div>
                </div>

                <span id="PickedWorkItemsValidation"></span>
                <span asp-validation-for="PickedWorkItems" class="text-danger"></span>
                <div class="mt-2 mb-2">
                    <ul class="mb-1 pl-0" id="myList" style="font-size: 16px; list-style-type: none;">
                        @foreach (var item in ViewBag.workitems)
                        {
                            <li>
                                <div class="d-flex justify-content-between mb-2">
                                    <div class="d-flex justify-content-start">
                                        <div class="btn-group-vertical">
                                            <div class="custom-control custom-checkbox btn-group-vertical">

                                                @if (PickedWorkItemId.Any(x => x == (item.Id).ToString()))
                                                {
                                                    <input asp-for="PickedWorkItems" type="checkbox" id="@item.Id" class="custom-control-input" value="@item.Id" name="PickedWorkItems" checked="checked">
                                                }
                                                else
                                                {
                                                    <input asp-for="PickedWorkItems" type="checkbox" id="@item.Id" class="custom-control-input" value="@item.Id" name="PickedWorkItems">
                                                }
                                                <label class="custom-control-label" for="@item.Id"></label>
                                            </div>
                                        </div>
                                        <div class="float-left m-auto" id="result">
                                            <label for="@item.Id">@item.Id - @item.Title</label>
                                        </div>
                                    </div>
                                    <div class="float-right">
                                        <a asp-controller="WorkItemAdmin" asp-action="ViewWorkItem" asp-route-id="@item.Id">
                                            <span class="btn btn-outline-secondary p-1 ml-2" style="white-space: nowrap;"><span class="fa fa-eye"></span> View</span>
                                        </a>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>

                <div class="d-flex justify-content-between">
                    <div class="justify-content-start">
                        <button type="submit" value="Save and publish" class="btn btn-outline-success float-left mr-1 submitButton" name="submitButton">Save and publish <span class="fa fa-info-circle" data-toggle="tooltip" data-placement="bottom" title="Save and publish will save the release note and publish the new changes to the public."></span></button>
                        <button type="submit" value="Save as draft" class="btn btn-outline-success float-left submitButton" name="submitButton">Save as draft <span class="fa fa-info-circle" data-toggle="tooltip" data-placement="bottom" title="Save as draft will save the release note, but it will no longer be visable for the public."></span></button>
                    </div>
                    <a class="btn btn-outline-danger float-right" asp-controller="ReleaseNotesAdmin" asp-action="ListAllReleaseNotes"><span class="fa fa-times"></span> Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}